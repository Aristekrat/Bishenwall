/*! DonateWare 21-11-2013 */
module.exports=function(a){a.initConfig({pkg:a.file.readJSON("package.json"),concat:{options:{separator:";"},dist:{src:["src/**/*.js"],dest:"dist/<%= pkg.name %>.js"}},compress:{main:{options:{mode:"gzip"},expand:!0,cwd:"./",src:["**/*"],dest:"dist/"}},uglify:{options:{banner:'/*! <%= pkg.name %> <%= grunt.template.today("dd-mm-yyyy") %> */\n'},build:{src:["./*.js","./routes/*.js","./public/front-end-scripts/*.js","./config/*.js"],dest:"dist/<%= pkg.name %>.min.js"}},cssmin:{minify:{expand:!0,src:["./public/css/screen.css"],dest:"dist/screen.min.css"}},imagemin:{dynamic:{files:[{expand:!0,cwd:"./public/images",src:["**/*.{png,jpg,gif}"],dest:"dist/"}]}},htmlmin:{options:{removeComments:!0,collapseWhitespace:!0},files:{"dist/index.html":"views/index.html"}},jshint:{files:["./*.js","./routes/*.js","./public/front-end-scripts/*.js","./config/*.js"],options:{globals:{console:!0,module:!0,document:!0}}},csslint:{strict:{options:{"import":2},src:["./public/css/*.css"]}},compass:{dist:{options:{config:"./public/css/config.rb"}}},watch:{jsLint:{files:["./*.js","./routes/*.js","./public/front-end-scripts/*.js","./config/*.js"],tasks:["jshint"]}}}),a.loadNpmTasks("grunt-contrib-yuidoc"),a.loadNpmTasks("grunt-contrib-compress"),a.loadNpmTasks("grunt-contrib-uglify"),a.loadNpmTasks("grunt-contrib-cssmin"),a.loadNpmTasks("grunt-contrib-htmlmin"),a.loadNpmTasks("grunt-contrib-imagemin"),a.loadNpmTasks("grunt-contrib-concat"),a.loadNpmTasks("grunt-contrib-jshint"),a.loadNpmTasks("grunt-contrib-csslint"),a.loadNpmTasks("grunt-contrib-jasmine"),a.loadNpmTasks("grunt-contrib-compass"),a.loadNpmTasks("grunt-contrib-watch"),a.registerTask("default",["watch"]),a.registerTask("jsLint",["jshint"]),a.registerTask("cssLint",["csslint"]),a.registerTask("Lint",["jshint","csslint"]),a.registerTask("test",["jasmine"]),a.registerTask("minify",["compress","uglify","cssmin","imagemin"])};var express=require("express"),routes=require("./routes"),app=express(),jade=require("jade"),mongodb=require("mongodb"),mongoose=require("mongoose"),expressValidator=require("express-validator"),nodeInspector=require("node-inspector"),commentModel=require("./public/schemas/comments.js"),mongo=require("./config/mongo_config.js"),port=process.env.PORT||3e3;app.configure(function(){app.set("views",__dirname+"/views"),app.set("view engine","jade"),app.use(express.bodyParser()),app.use(expressValidator()),app.use(express.methodOverride()),app.use(app.router),app.use(express.static(__dirname+"/public"))}),app.configure("development",function(){app.use(express.errorHandler({dumpExceptions:!0,showStack:!0}))}),app.configure("production",function(){app.use(express.errorHandler())}),app.get("/",routes.index),app.post("/",function(a,b){var c=new commentModel({title:a.body.comment.title,name:a.body.comment.name,text:a.body.comment.text});a.checkBody("comment.title","Title required","comment.text","Comment required").notEmpty(),a.sanitize("comment").xss(),c.save(function(a){a?(console.log(a),b.redirect("/")):(console.log("Good show!"),b.redirect("/"))})}),app.listen(port,function(){console.log("Express server listening on port 3000")}),exports.index=function(a,b){b.render("../views/index",{title:"Bishenwall"})};var mongoose=require("../node_modules/mongoose"),db=mongoose.connection,dbURL="mongodb://localhost/bishenwall";mongoose.connect(dbURL),db.on("error",console.error.bind(console,"connection error:")),module.exports=db;